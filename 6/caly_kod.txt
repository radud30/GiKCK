using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;
using System.Xml.Serialization;

namespace WindowsFormsApplication1
{
    public partial class Form1 : Form
    {
        public Dane dane = new Dane();
        private int szer = 0, wys = 0;
        public Form1()
        {
            InitializeComponent();
        }

        public class Dane
        {
            public int prog1 = 0;
            public int prog2 = 0;
            public int m1 = 0, m2 = 0, m3 = 0, m4 = 0, m5 = 0, m6 = 0, m7 = 0, m8 = 0, m9 = 0;
        }

        private void button1_Click(object sender, EventArgs e)
        {
            if (openFileDialog1.ShowDialog() == DialogResult.OK) 
            {
                pictureBox1.Load(openFileDialog1.FileName);
                szer = pictureBox1.Image.Width;
                wys = pictureBox1.Image.Height;
                pictureBox2.Image = new Bitmap(szer, wys);
            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Color k;
            int r, g, b;
            for (int x=0; x < szer; x++)
            {
                for (int y = 0; y < wys; y++)
                {
                    k = b1.GetPixel(x, y);
                    r = k.R;
                    g = k.G;
                    b = k.B;
                    k = Color.FromArgb(b, g, r);
                    b2.SetPixel(x, y, k);
                }
            }
            pictureBox2.Refresh();
        }

        private void button4_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Color k;
            int r, g, b;
            for (int x = 0; x < szer; x++)
            {
                for (int y = 0; y < wys; y++)
                {
                    k = b1.GetPixel(x, y);
                    r = k.R;
                    g = k.G;
                    b = k.B;
                    k = Color.FromArgb(r, b, g);
                    b2.SetPixel(x, y, k);
                }
            }
            pictureBox2.Refresh();
        }

        private void button3_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Color k;
            int r, g, b;
            for (int x = 0; x < szer; x++)
            {
                for (int y = 0; y < wys; y++)
                {
                    k = b1.GetPixel(x, y);
                    r = k.R;
                    g = k.G;
                    b = k.B;
                    k = Color.FromArgb(g, r, b);
                    b2.SetPixel(x, y, k);
                }
            }
            pictureBox2.Refresh();
        }

        private void button5_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Color k;
            int r, g, b;
            for (int x = 0; x < szer; x++)
            {
                for (int y = 0; y < wys; y++)
                {
                    k = b2.GetPixel(x, y);
                    r = k.R;
                    g = k.G;
                    b = k.B;
                    k = Color.FromArgb(r, g, b);
                    b1.SetPixel(x, y, k);
                }
            }
            pictureBox1.Refresh();
        }

        private void button6_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Color k;
            int Grayscale;
            for (int x = 0; x < szer; x++)
            {
                for (int y = 0; y < wys; y++)
                {
                    k = b1.GetPixel(x, y);
                    Grayscale = (k.R + k.G + k.B) / 3;
                    //r = k.R;
                    //g = k.G;
                    //b = k.B;
                    k = Color.FromArgb(Grayscale, Grayscale, Grayscale);
                    b2.SetPixel(x, y, k);
                }
            }
            pictureBox2.Refresh();
        }

        private void button7_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Color k;
            int Grayscale;
            for (int x = 0; x < szer; x++)
            {
                for (int y = 0; y < wys; y++)
                {
                    k = b1.GetPixel(x, y);
                    Grayscale = (int)(k.R * 0.3 + k.G * 0.59+ k.B *0.11);
                    //r = k.R;
                    //g = k.G;
                    //b = k.B;
                    k = Color.FromArgb(Grayscale, Grayscale, Grayscale);
                    b2.SetPixel(x, y, k);
                }
            }
            pictureBox2.Refresh();
        }

       

        private void button8_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Color k;
            int Grayscale;
            dane.prog1 = trackBar1.Value;
            dane.prog2 = trackBar2.Value;
            for (int x = 0; x < szer; x++)
            {
                for (int y = 0; y < wys; y++)
                {
                    k = b1.GetPixel(x, y);
                    Grayscale = (k.R + k.G + k.B) / 3;
                    //r = k.R;
                    //g = k.G;
                    //b = k.B;
                    if (Grayscale < dane.prog1)
                    {
                        k = Color.FromArgb(0, 0, 0);
                        b2.SetPixel(x, y, k);
                    }
                    else if (Grayscale < dane.prog2)
                    {
                        k = Color.FromArgb(128, 128, 128);
                        b2.SetPixel(x, y, k);
                    }
                    else
                    {
                        k = Color.FromArgb(255, 255, 255);
                        b2.SetPixel(x, y, k);
                    }

                }
            }
            pictureBox2.Refresh();
        }

      

        private void button9_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;

            int r, g, b;
           // int[,] maska = new int[3, 3];

            dane.m1 = (int)numericUpDown1.Value;
            dane.m2 = (int)numericUpDown2.Value;
            dane.m3 = (int)numericUpDown3.Value;
            dane.m4 = (int)numericUpDown4.Value;
            dane.m5 = (int)numericUpDown5.Value;
            dane.m6 = (int)numericUpDown6.Value;
            dane.m7 = (int)numericUpDown7.Value;
            dane.m8 = (int)numericUpDown8.Value;
            dane.m9 = (int)numericUpDown9.Value;

            int suma = 0;
            Color k1, k2, k3, k4, k5, k6, k7, k8, k9;

            suma = dane.m1 + dane.m2 + dane.m3 + dane.m4 + dane.m5 + dane.m6 + dane.m7 + dane.m8 + dane.m9;

                for (int x = 1; x < szer -1; x++)
                {
                    for (int y = 1; y < wys -1; y++)
                    {
                        k1 = b1.GetPixel(x - 1, y - 1);
                        k2 = b1.GetPixel(x, y - 1);
                        k3 = b1.GetPixel(x + 1, y - 1);
                        k4 = b1.GetPixel(x - 1, y);
                        k5 = b1.GetPixel(x, y);
                        k6 = b1.GetPixel(x + 1, y);
                        k7 = b1.GetPixel(x - 1, y + 1);
                        k8 = b1.GetPixel(x, y + 1);
                        k9 = b1.GetPixel(x + 1, y + 1);

                        r = k1.R * dane.m1 + k2.R * dane.m2 + k3.R * dane.m3 + k4.R * dane.m4 + k5.R * dane.m5 + k6.R * dane.m6 + k7.R * dane.m7 + k8.R * dane.m8 + k9.R * dane.m9;

                        if (suma != 0) r = r / suma;
                        if (r > 255) r = 255;
                        if (r < 0) r = 0;

                        g = k1.G * dane.m1 + k2.G * dane.m2 + k3.G * dane.m3 + k4.G * dane.m4 + k5.G * dane.m5 + k6.G * dane.m6 + k7.G * dane.m7 + k8.G * dane.m8 + k9.G * dane.m9;

                        if (suma != 0) g = g / suma;
                        if (g > 255) g = 255;
                        if (g < 0) g = 0;

                        b = k1.B * dane.m1 + k2.B * dane.m2 + k3.B * dane.m3 + k4.B * dane.m4 + k5.B * dane.m5 + k6.B * dane.m6 + k7.B * dane.m7 + k8.B * dane.m8 + k9.B * dane.m9;

                        if (suma != 0) b = b / suma;
                        if (b > 255) b = 255;
                        if (b < 0) b = 0;

                        b2.SetPixel(x, y, Color.FromArgb(r, g, b));
                    }
                }
            pictureBox2.Refresh();
        }

        private void button10_Click(object sender, EventArgs e)
        {
            numericUpDown1.Value = 0;
            numericUpDown2.Value = -1;
            numericUpDown3.Value = 0;
            numericUpDown4.Value = -1;
            numericUpDown5.Value = 5;
            numericUpDown6.Value = -1;
            numericUpDown7.Value = 0;
            numericUpDown8.Value = -1;
            numericUpDown9.Value = 0;
        }

        private void button11_Click(object sender, EventArgs e)
        {
            numericUpDown1.Value = 0;
            numericUpDown2.Value = 0;
            numericUpDown3.Value = 0;
            numericUpDown4.Value = -1;
            numericUpDown5.Value = 1;
            numericUpDown6.Value = 0;
            numericUpDown7.Value = 0;
            numericUpDown8.Value = 0;
            numericUpDown9.Value = 0;
        }

        private void button12_Click(object sender, EventArgs e)
        {
            numericUpDown1.Value = -1;
            numericUpDown2.Value = 0;
            numericUpDown3.Value = 1;
            numericUpDown4.Value = -1;
            numericUpDown5.Value = 1;
            numericUpDown6.Value = 1;
            numericUpDown7.Value = -1;
            numericUpDown8.Value = 0;
            numericUpDown9.Value = 1;
        }

        private void Form1_FormClosed(object sender, FormClosedEventArgs e)
        {
            StreamWriter sw = new StreamWriter("dane.xml");
            try
            {
                XmlSerializer serializer = new XmlSerializer(typeof(Dane));
                serializer.Serialize(sw, dane);
                sw.Close();
            }
            catch (Exception err)
            {
                Text = err.ToString();         
            }
            finally
            {
                sw.Close();
            }

        }

        private void Form1_Load(object sender, EventArgs e)
        {
             if (File.Exists("dane.xml"))
            {
                StreamReader sr = new StreamReader("dane.xml");
                try
                {
                    XmlSerializer serializer = new XmlSerializer(typeof(Dane));
                    dane = (Dane)serializer.Deserialize(sr);

                    trackBar1.Value = dane.prog1;
                    trackBar2.Value = dane.prog2;

                    numericUpDown1.Value = dane.m1;
                    numericUpDown2.Value = dane.m2;
                    numericUpDown3.Value = dane.m3;
                    numericUpDown4.Value = dane.m4;
                    numericUpDown5.Value = dane.m5;
                    numericUpDown6.Value = dane.m6;
                    numericUpDown7.Value = dane.m7;
                    numericUpDown8.Value = dane.m8;
                    numericUpDown9.Value = dane.m9;
                }
                catch (Exception err)
                {
                    Text = err.ToString();
                }
                finally
                {
                    sr.Close();
                }
            }
        }

        private void button13_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Color k;
            int r, g, b;
            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k = b1.GetPixel(i, j);
                    r = 255 - k.R;
                    g = 255 - k.G;
                    b = 255 - k.B;

                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(i, j, k);
                }
            }
            pictureBox2.Refresh();
        }

        private void button14_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            int _b = 127;
            Color k;
            int r, g, b;
            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k = b1.GetPixel(i, j);

                    r = k.R + _b;
                    g = k.G + _b;
                    b = k.B + _b;
                    if (k.R + _b > 255)
                    {
                        r = 255;
                    }
                    if (k.G + _b > 255)
                    {
                        g = 255;
                    }
                    if (k.B + _b > 255)
                    {
                        b = 255;
                    }

                    b2.SetPixel(i, j, Color.FromArgb(r, g, b));

                }
            }
            pictureBox2.Refresh();
        }

        private void button15_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            int _b = 127;
            Color k;
            int r, g, b;
            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k = b1.GetPixel(i, j);

                    r = k.R - _b;
                    g = k.G - _b;
                    b = k.B - _b;
                    if (k.R - _b < 0)
                    {
                        r = 0;
                    }
                    if (k.G - _b < 0)
                    {
                        g = 0;
                    }
                    if (k.B - _b < 0)
                    {
                        b = 0;
                    }

                    b2.SetPixel(i, j, Color.FromArgb(r, g, b));

                }
            }
            pictureBox2.Refresh();
        }

        private void button16_Click(object sender, EventArgs e)
        {
            if (openFileDialog1.ShowDialog() == DialogResult.OK)
            {
                pictureBox3.Load(openFileDialog1.FileName);
                szer = pictureBox3.Image.Width;
                wys = pictureBox3.Image.Height;
                pictureBox2.Image = new Bitmap(szer, wys);
            }
        }

        private void button17_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b3 = (Bitmap)pictureBox3.Image;
            Color k,k1,k2;
            int r, g, b;

            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k1 = b1.GetPixel(i, j);
                    k2 = b3.GetPixel(i, j);

                    if (k1.R + k2.R > 255) r = 255;
                    else r = k1.R + k2.R;

                    if (k1.G + k2.G > 255) g = 255;
                    else g = k1.G + k2.G;

                    if (k1.B + k2.B > 255) b = 255;
                    else b = k1.B + k2.B;

                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(i, j, k);
                }
            }
            pictureBox2.Refresh();

            

            
        }

        private void button18_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b3 = (Bitmap)pictureBox3.Image;
            Color k, k1, k2;
            int r, g, b;

            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k1 = b1.GetPixel(i, j);
                    k2 = b3.GetPixel(i, j);

                    if (k1.R + k2.R -255 > 255) r = 255;
                    else if (k1.R + k2.R -255 < 0) r = 0;
                    else r = k1.R + k2.R - 255;

                    if (k1.G + k2.G -255 > 255) g = 255;
                    else if (k1.G + k2.G - 255 < 0) g = 0;
                    else g = k1.G + k2.G - 255;

                    if (k1.B + k2.B - 255 > 255) b = 255;
                    else if (k1.B + k2.B -255 < 0) b = 0;
                    else b = k1.B + k2.B -255;

                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(i, j, k);
                }
            }
            pictureBox2.Refresh();
        }

        private void button19_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b3 = (Bitmap)pictureBox3.Image;
            Color k, k1, k2;
            int r, g, b;

            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k1 = b1.GetPixel(i, j);
                    k2 = b3.GetPixel(i, j);

                    if (k1.R - k2.R < 0) r = (k1.R - k2.R) * -1;
                    else r = (k1.R - k2.R);

                    if (k1.G - k2.G < 0) g = (k1.G - k2.G) * -1;
                    else g = (k1.G - k2.G);

                    if (k1.B - k2.B < 0) b = (k1.B - k2.B) * -1;
                    else b = (k1.B - k2.B);

                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(i, j, k);
                }
            }
            pictureBox2.Refresh();
        }

        private void button20_Click(object sender, EventArgs e)
        {

            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b3 = (Bitmap)pictureBox3.Image;
            Color k, k1, k2;
            int r, g, b;

            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k1 = b1.GetPixel(i, j);
                    k2 = b3.GetPixel(i, j);

                    r = (k1.R * k2.R) /255;
                    

                    g = (k1.G * k2.G) /255;
                    

                    b = (k1.B * k2.B) /255;
                   

                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(i, j, k);
                }
            }
            pictureBox2.Refresh();

        }

        private void button21_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b3 = (Bitmap)pictureBox3.Image;
            Color k, k1, k2;
            int r, g, b;

            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k1 = b1.GetPixel(i, j);
                    k2 = b3.GetPixel(i, j);

                    r = 255 - (((255 - k1.R) * (255 - k2.R)) / 255);
                    if (r > 255) r = 255;
                    if (r < 0) r = 0;

                    g = 255 - (((255 - k1.G) * (255 - k2.G)) / 255);
                    if (g > 255) g = 255;
                    if (g< 0) g = 0;

                    b = 255 - (((255 - k1.B) * (255 - k2.B)) / 255);
                    if (b > 255) b = 255;
                    if (b < 0) b = 0;

                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(i, j, k);
                }
            }
            pictureBox2.Refresh();
        }

        private void button22_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b3 = (Bitmap)pictureBox3.Image;
            Color k, k1, k2;
            int r, g, b;

            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k1 = b1.GetPixel(i, j);
                    k2 = b3.GetPixel(i, j);

                    r = 255 - k1.R - k2.R;
                    if (r < 0) r *= -1;
                    r = 255 - r;

                    g = 255 - k1.G - k2.G;
                    if (g < 0) g *= -1;
                    g = 255 - g;

                    b = 255 - k1.B - k2.B;
                    if (b < 0) b *= -1;
                    b = 255 - b;

                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(i, j, k);
                }
            }
            pictureBox2.Refresh();
        }

        private void button23_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b3 = (Bitmap)pictureBox3.Image;
            Color k, k1, k2;
            int r, g, b;

            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k1 = b1.GetPixel(i, j);
                    k2 = b3.GetPixel(i, j);

                    if (k1.R < k2.R) r = k1.R;
                    else r = k2.R;

                    if (k1.G < k2.G) g = k1.G;
                    else g = k2.G;

                    if (k1.B < k2.B) b = k1.B;
                    else b = k2.B;

                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(i, j, k);
                }
            }
            pictureBox2.Refresh();
        }

        private void button24_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b3 = (Bitmap)pictureBox3.Image;
            Color k, k1, k2;
            int r, g, b;

            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k1 = b1.GetPixel(i, j);
                    k2 = b3.GetPixel(i, j);

                    if (k1.R > k2.R) r = k1.R;
                    else r = k2.R;

                    if (k1.G > k2.G) g = k1.G;
                    else g = k2.G;

                    if (k1.B > k2.B) b = k1.B;
                    else b = k2.B;

                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(i, j, k);
                }
            }
            pictureBox2.Refresh();
        }

        private void button25_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b3 = (Bitmap)pictureBox3.Image;
            Color k, k1, k2;
            int r, g, b;

            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k1 = b1.GetPixel(i, j);
                    k2 = b3.GetPixel(i, j);

                    r = k1.R + k2.R - (2 * k1.R * k2.R) / 255;
                    if (r < 0) r *= -1;

                    g = k1.G + k2.G - (2 * k1.G * k2.G) / 255;
                    if (g < 0) g *= -1;

                    b = k1.B + k2.B - (2 * k1.B * k2.B) / 255;
                    if (b < 0) b *= -1;

                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(i, j, k);
                }
            }
            pictureBox2.Refresh();
        }

        private void button26_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b3 = (Bitmap)pictureBox3.Image;
            Color k, k1, k2;
            int r, g, b;

            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k1 = b1.GetPixel(i, j);
                    k2 = b3.GetPixel(i, j);

                    if (k1.R < 128) r = (2 * k1.R * k2.R) / 255;
                    else r = 255 - (2 * (255 - k1.R) * (255 - k2.R)) / 255;
                    if (r < 0) r *= -1;

                    if (k1.G < 128) g = (2 * k1.G * k2.G) / 255;
                    else g = 255 - (2 * (255 - k1.G) * (255 - k2.G)) / 255;
                    if (g < 0) g *= -1;

                    if (k1.B < 128) b = (2 * k1.B * k2.B) / 255;
                    else b = 255 - (2 * (255 - k1.B) * (255 - k2.B)) / 255;
                    if (b < 0) b *= -1;

                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(i, j, k);
                }
            }
            pictureBox2.Refresh();
        }

        private void button27_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b3 = (Bitmap)pictureBox3.Image;
            Color k, k1, k2;
            int r, g, b;

            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k1 = b1.GetPixel(i, j);
                    k2 = b3.GetPixel(i, j);

                    if (k2.R < 0) r = (2 * k1.R * k2.R) / 255;
                    else r = 255 - (2 * (255 - k1.R) * (255 - k2.R)) / 255;
                    if (r < 0) r *= -1;

                    if (k2.G < 0) g = (2 * k1.G * k2.G) / 255;
                    else g = 255 - (2 * (255 - k1.G) * (255 - k2.G)) / 255;
                    if (g < 0) g *= -1;

                    if (k2.B < 0) b = (2 * k1.B * k2.B) / 255;
                    else b = 255 - (2 * (255 - k1.B) * (255 - k2.B)) / 255;
                    if (b < 0) b *= -1;

                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(i, j, k);
                }
            }
            pictureBox2.Refresh();
        }

        private void button28_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b3 = (Bitmap)pictureBox3.Image;
            Color k, k1, k2;
            int r, g, b;

            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k1 = b1.GetPixel(i, j);
                    k2 = b3.GetPixel(i, j);

                    if (k2.R == 0) r = 255;
                    else r = (k1.R * 255 / (255 - k2.R));
                    if (r > 255) r = 255;
                    if (k2.G == 0) g = 255;
                    else g = (k1.G * 255 / (255 - k2.G));
                    if (g > 255) g = 255;
                    if (k2.B == 0) b = 255;
                    else b = (k1.B * 255 / (255 - k2.B));
                    if (b > 255) b = 255;
                    

                        k = Color.FromArgb(r, g, b);
                        b2.SetPixel(i, j, k);
                    
                    
                }
            }
            pictureBox2.Refresh();
        }

        private void button29_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b3 = (Bitmap)pictureBox3.Image;
            Color k, k1, k2;
            int r, g, b;

            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k1 = b1.GetPixel(i, j);
                    k2 = b3.GetPixel(i, j);

                    if (k2.R == 0) r = 255;
                    else r = (255 - (((255 - k1.R) * 255) / k2.R));
                    if (r < 0) r = 0;
                    if (k2.G == 0) g = 255;
                    else g = (255 - (((255 - k1.G) * 255) / k2.G));
                    if (g < 0) g = 0;  
                    if (k2.B == 0) b = 255;
                    else b = (255 - (((255 - k1.B) * 255) / k2.B));
                    if (b < 0) b = 0;
                    


                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(i, j, k);


                }
            }
            pictureBox2.Refresh();
        }

        private void button30_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b3 = (Bitmap)pictureBox3.Image;
            Color k, k1, k2;
            int r, g, b;

            for (int i = 0; i < szer; i++)
            {
                for (int j = 0; j < wys; j++)
                {
                    k1 = b1.GetPixel(i, j);
                    k2 = b3.GetPixel(i, j);

                    if (255 - k2.R == 0) r = 0;
                    else r = (k1.R * k1.R) / (255 - k2.R);
                    if (r > 255) r = 255;
                    if (255 - k2.G == 0) g = 0;
                    else g = (k1.G * k1.G) / (255 - k2.G);
                    if (g > 255) g = 255;
                    if (255 - k2.G == 0)  b = 0;
                    else b = (k1.B * k1.B) / (255 - k2.B);
                    if (b > 255) b = 255;

                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(i, j, k);


                }
            }
            pictureBox2.Refresh();
        }

        private void trackBar3_Scroll(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;

            Color k;
            int a, r, g, b;

            for (int x = 0; x < szer; x++)
            {
                for (int y = 0; y < wys; y++)
                {
                    k = b1.GetPixel(x, y);

                    r = k.R;
                    g = k.G;
                    b = k.B;
                    a = trackBar3.Value;

                    k = Color.FromArgb(a, r, g, b);

                    b2.SetPixel(x, y, k);
                }
            }

            pictureBox2.Refresh();
        }

        private void numericUpDown10_ValueChanged(object sender, EventArgs e)
        {
            decimal gamma = numericUpDown10.Value;

            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;

            Color k;
            int r, g, b;

            for (int x = 0; x < szer; x++)
            {
                for (int y = 0; y < wys; y++)
                {
                    k = b1.GetPixel(x, y);

                    r = (int)(255 * Math.Pow(k.R / 255.0, 1.0 / (double)gamma));
                    g = (int)(255 * Math.Pow(k.G / 255.0, 1.0 / (double)gamma));
                    b = (int)(255 * Math.Pow(k.B / 255.0, 1.0 / (double)gamma));

                    k = Color.FromArgb(r, g, b);

                    b2.SetPixel(x, y, k);
                }
            }

            pictureBox2.Refresh();
        }

        private void numericUpDown11_ValueChanged(object sender, EventArgs e)
        {
            decimal treshold = numericUpDown11.Value;
            double contrast = Math.Pow((100.0 + (int)treshold) / 100, 2);

            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;

            Color k;
            int r, g, b;

            for (int x = 0; x < szer; x++)
            {
                for (int y = 0; y < wys; y++)
                {
                    k = b1.GetPixel(x, y);

                    r = (int)(((((k.R / 255.0) - 0.5) * contrast) + 0.5) * 255.0);
                    if (r > 255) r = 255; if (r < 0) r = 0;
                    g = (int)(((((k.G / 255.0) - 0.5) * contrast) + 0.5) * 255.0);
                    if (g > 255) g = 255; if (g < 0) g = 0;
                    b = (int)(((((k.B / 255.0) - 0.5) * contrast) + 0.5) * 255.0);
                    if (b > 255) b = 255; if (b < 0) b = 0;

                    k = Color.FromArgb(r, g, b);

                    b2.SetPixel(x, y, k);
                }
            }

            pictureBox2.Refresh();
        }


        int[] red = new int[256];
        int[] green = new int[256];
        int[] blue = new int[256];

        private void button31_Click(object sender, EventArgs e)
        {
            

            Bitmap b1 = (Bitmap)pictureBox1.Image;

            Color k;


            for (int x = 0; x < szer; x++)
            {
                for (int y = 0; y < wys; y++)
                {
                    k = b1.GetPixel(x, y);
                    red[k.R]++;
                    green[k.G]++;
                    blue[k.B]++;
                }
            }
            chart1.Series["red"].Points.Clear();
            chart1.Series["green"].Points.Clear();
            chart1.Series["blue"].Points.Clear();
            for (int i = 0; i < 256; i++)
            {
                chart1.Series["red"].Points.AddXY(i, red[i]);
                chart1.Series["green"].Points.AddXY(i, green[i]);
                chart1.Series["blue"].Points.AddXY(i, blue[i]);
            }
            chart1.Invalidate();
        }


        private int[] wyrownanie(int[] values, int size)
        {
            double minValue = 0;
            for (int i = 0; i < 256; i++)
            {
                if (values[i] != 0)
                {
                    minValue = values[i];
                    break;
                }
            }
            int[] result = new int[256];
            double sum = 0;
            for (int i = 0; i < 256; i++)
            {
                sum += values[i];
                result[i] = (int)(((sum - minValue) / (size - minValue)) * 255.0);
            }

            return result;
        }

        private void button32_Click(object sender, EventArgs e)
        {
            int[] LUTred = wyrownanie(red, pictureBox1.Image.Width * pictureBox1.Image.Height);
            int[] LUTgreen = wyrownanie(green, pictureBox1.Image.Width * pictureBox1.Image.Height);
            int[] LUTblue = wyrownanie(blue, pictureBox1.Image.Width * pictureBox1.Image.Height);

            Bitmap b2 = (Bitmap)pictureBox2.Image;
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            int[] red1 = new int[256];
            int[] green1 = new int[256];
            int[] blue1 = new int[256];
            for (int x = 0; x < szer; x++)
            {
                for (int y = 0; y < wys; y++)
                {
                    Color k = b1.GetPixel(x, y);
                    Color newk = Color.FromArgb(LUTred[k.R], LUTgreen[k.G], LUTblue[k.B]);
                    b2.SetPixel(x, y, newk);
                    red1[newk.R]++;
                    green1[newk.G]++;
                    blue1[newk.B]++;
                }
            }
            pictureBox2.Refresh();
            chart1.Series["red"].Points.Clear();
            chart1.Series["green"].Points.Clear();
            chart1.Series["blue"].Points.Clear();
            for (int i = 0; i < 256; i++)
            {
                chart1.Series["red"].Points.AddXY(i, red1[i]);
                chart1.Series["green"].Points.AddXY(i, green1[i]);
                chart1.Series["blue"].Points.AddXY(i, blue1[i]);
            }
            chart1.Invalidate();
        }

        private int[] Skalowanie(int[] values)
        {
            int minValue = 0;
            for (int i = 0; i < 256; i++)
            {
                if (values[i] != 0)
                {
                    minValue = i;
                    break;
                }
            }
            int maxValue = 255;
            for (int i = 255; i >= 0; i--)
            {
                if (values[i] != 0)
                {
                    maxValue = i;
                    break;
                }
            }
            int[] result = new int[256];
            double a = 255.0 / (maxValue - minValue);
            for (int i = 0; i < 256; i++)
            {
                result[i] = (int)(a * (i - minValue));
            }

            return result;
        }

        private void button33_Click(object sender, EventArgs e)
        {
            int[] LUTred = Skalowanie(red);
            int[] LUTgreen = Skalowanie(green);
            int[] LUTblue = Skalowanie(blue);
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;
            int[] red1 = new int[256];
            int[] green1 = new int[256];
            int[] blue1 = new int[256];
            for (int x = 0; x < szer; x++)
            {
                for (int y = 0; y < wys; y++)
                {
                    Color k = b1.GetPixel(x, y);
                    Color newk = Color.FromArgb(LUTred[k.R], LUTgreen[k.G], LUTblue[k.B]);
                    b2.SetPixel(x, y, newk);
                    red1[newk.R]++;
                    green1[newk.G]++;
                    blue1[newk.B]++;
                }
            }
            pictureBox2.Refresh();
            chart1.Series["red"].Points.Clear();
            chart1.Series["green"].Points.Clear();
            chart1.Series["blue"].Points.Clear();
            for (int i = 0; i < 256; i++)
            {
                chart1.Series["red"].Points.AddXY(i, red1[i]);
                chart1.Series["green"].Points.AddXY(i, green1[i]);
                chart1.Series["blue"].Points.AddXY(i, blue1[i]);
            }
            chart1.Invalidate();
        }


        }
        

       
    
}
