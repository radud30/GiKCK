
package czajnik.v2;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.lang.Math;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.io.PrintWriter;

public class czajnikv2 {

    private static double round(double value, int places) {
        if (places < 0) throw new IllegalArgumentException();

        BigDecimal bd = new BigDecimal(Double.toString(value));
        bd = bd.setScale(places, RoundingMode.HALF_UP);
        return bd.doubleValue();
    }

    public static void main(String[] args) throws FileNotFoundException {

        PrintWriter zapis = new PrintWriter("czajnik.txt");

        double x[][] = new double[4][4];
        double y[][] = new double[4][4];
        double z[][] = new double[4][4];
        int i,j,k;
        double t,s;
        String xyz;

        double zmX,zmY,zmZ;

            File plik = new File("dane.txt");
            Scanner in = new Scanner(plik);

            for(i=0;i<33;i++) {
                for(j=0;j<4;j++){
                    for(k=0;k<4;k++) {
                        xyz = in.next();
                        x[j][k] = Double.parseDouble(xyz);

                        xyz = in.next();
                        y[j][k] = Double.parseDouble(xyz);

                        xyz = in.next();
                        z[j][k] = Double.parseDouble(xyz);
                    }
                }

                for(t=0;t<=1;t=t+0.001) {
                    for(s=0;s<=1;s=s+0.1) {
                            zmX = ((1-s)*(1-s)*(1-s))*(x[0][0]*(1-t)*(1-t)*(1-t)+3*x[0][1]*t*(1-t)*(1-t)+3*x[0][2]*t*t*(1-t)+x[0][3]*t*t*t)+(3*(1-s)*(1-s)*s)*(x[1][0]*(1-t)*(1-t)*(1-t)+3*x[1][1]*t*(1-t)*(1-t)+3*x[1][2]*t*t*(1-t)+x[1][3]*t*t*t)+(3*(1-s)*s*s)*(x[2][0]*(1-t)*(1-t)*(1-t)+3*x[2][1]*t*(1-t)*(1-t)+3*x[2][2]*t*t*(1-t)+x[2][3]*t*t*t)+(s*s*s)*(x[3][0]*(1-t)*(1-t)*(1-t)+3*x[3][1]*t*(1-t)*(1-t)+3*x[3][2]*t*t*(1-t)+x[3][3]*t*t*t);
                            zmY = ((1-s)*(1-s)*(1-s))*(y[0][0]*(1-t)*(1-t)*(1-t)+3*y[0][1]*t*(1-t)*(1-t)+3*y[0][2]*t*t*(1-t)+y[0][3]*t*t*t)+(3*(1-s)*(1-s)*s)*(y[1][0]*(1-t)*(1-t)*(1-t)+3*y[1][1]*t*(1-t)*(1-t)+3*y[1][2]*t*t*(1-t)+y[1][3]*t*t*t)+(3*(1-s)*s*s)*(y[2][0]*(1-t)*(1-t)*(1-t)+3*y[2][1]*t*(1-t)*(1-t)+3*y[2][2]*t*t*(1-t)+y[2][3]*t*t*t)+(s*s*s)*(y[3][0]*(1-t)*(1-t)*(1-t)+3*y[3][1]*t*(1-t)*(1-t)+3*y[3][2]*t*t*(1-t)+y[3][3]*t*t*t);
                            zmZ = ((1-s)*(1-s)*(1-s))*(z[0][0]*(1-t)*(1-t)*(1-t)+3*z[0][1]*t*(1-t)*(1-t)+3*z[0][2]*t*t*(1-t)+z[0][3]*t*t*t)+(3*(1-s)*(1-s)*s)*(z[1][0]*(1-t)*(1-t)*(1-t)+3*z[1][1]*t*(1-t)*(1-t)+3*z[1][2]*t*t*(1-t)+z[1][3]*t*t*t)+(3*(1-s)*s*s)*(z[2][0]*(1-t)*(1-t)*(1-t)+3*z[2][1]*t*(1-t)*(1-t)+3*z[2][2]*t*t*(1-t)+z[2][3]*t*t*t)+(s*s*s)*(z[3][0]*(1-t)*(1-t)*(1-t)+3*z[3][1]*t*(1-t)*(1-t)+3*z[3][2]*t*t*(1-t)+z[3][3]*t*t*t);
                            zapis.println(round(zmX,2) + ", " + round(zmY,2) + ", " + round(zmZ,2));
                    }
                }
            }
        zapis.close();
    }
}